
  i i i i i i i       ooooo    o        ooooooo   ooooo   ooooo
  I I I I I I I      8     8   8           8     8     o  8    8
  I  \ `+' /  I      8         8           8     8        8    8
   \  `-+-'  /       8         8           8      ooooo   8oooo
    `-__|__-'        8         8           8           8  8
        |            8     o   8           8     o     8  8
  ------+------       ooooo    8oooooo  ooo8ooo   ooooo   8

Welcome to GNU CLISP 2.49 (2010-07-07) <http://clisp.cons.org/>

Copyright (c) Bruno Haible, Michael Stoll 1992, 1993
Copyright (c) Bruno Haible, Marcus Daniels 1994-1997
Copyright (c) Bruno Haible, Pierpaolo Bernardi, Sam Steingold 1998
Copyright (c) Bruno Haible, Sam Steingold 1999-2000
Copyright (c) Sam Steingold, Bruno Haible 2001-2010

Type :h and hit Enter for context help.

[1]> (setf oo-languages '(simula smalltalk java clos))

(SIMULA SMALLTALK JAVA CLOS)
[2]> oo-languages

(SIMULA SMALLTALK JAVA CLOS)
[3]> 'oo-languages

OO-LANGUAGES
[4]> (quote oo-languages)

OO-LANGUAGES
[5]> (car oo-languages)

SIMULA
[6]> (cdr oo-languages)

(SMALLTALK JAVA CLOS)
[7]> (car (cdr oo-languages) )

SMALLTALK
[8]> (cadr oo-languages)

SMALLTALK
[9]> (second oo-languages)

SMALLTALK
[10]> (first oo-languages)

SIMULA
[11]> (third oo-languages)

JAVA
[12]> (nth 1 oo-languages)

SMALLTALK
[13]> (setf numbers '(1 2 3) )

(1 2 3)
[14]> (setf letters '(A B C))

(A B C)
[15]> (cons numbers letters)

((1 2 3) A B C)
[16]> (list numbers letters)

((1 2 3) (A B C))
[17]> (append numbers letters)

(1 2 3 A B C)
[18]> (list numbers (cdr numbers)(cddr numbers))

((1 2 3) (2 3) (3))
[19]> (append numbers (cdr numbers)(cddr numbers))

(1 2 3 2 3 3)
[20]> (setf animals '(ant bat cat dog eel) )
(ANT BAT CAT DOG EEL)
[21]> (car (cdr (cdr (cdr animals) ) ) )

DOG
[22]> (nth 3 animals)

DOG
[23]> (setf a 'apple b 'peach c 'cherry)

CHERRY
[24]> (cons a (cons b (cons c () ) ) )

(APPLE PEACH CHERRY)
[25]> (list a b c)

(APPLE PEACH CHERRY)
[26]> (setf x '(red blue) y '(green yellow) )

(GREEN YELLOW)
[27]> (append x y y x)

(RED BLUE GREEN YELLOW GREEN YELLOW RED BLUE)
[28]> (bye)

Bye.
