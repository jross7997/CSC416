  i i i i i i i       ooooo    o        ooooooo   ooooo   ooooo
  I I I I I I I      8     8   8           8     8     o  8    8
  I  \ `+' /  I      8         8           8     8        8    8
   \  `-+-'  /       8         8           8      ooooo   8oooo
    `-__|__-'        8         8           8           8  8
        |            8     o   8           8     o     8  8
  ------+------       ooooo    8oooooo  ooo8ooo   ooooo   8

Welcome to GNU CLISP 2.49 (2010-07-07) <http://clisp.cons.org/>

Copyright (c) Bruno Haible, Michael Stoll 1992, 1993
Copyright (c) Bruno Haible, Marcus Daniels 1994-1997
Copyright (c) Bruno Haible, Pierpaolo Bernardi, Sam Steingold 1998
Copyright (c) Bruno Haible, Sam Steingold 1999-2000
Copyright (c) Sam Steingold, Bruno Haible 2001-2010

Type :h and hit Enter for context help.

[1]> "Common Lisp Object System"
"Common Lisp Object System"
[2]> 555555555555555555555555555
555555555555555555555555555
[3]> pi
3.1415926535897932385L0
[4]> pie

*** - SYSTEM::READ-EVAL-PRINT: variable PIE has no value
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of PIE.
STORE-VALUE    :R2      Input a new value for PIE.
ABORT          :R3      Abort main loop
Break 1 [5]> :a
[6]> (+ 2 3 5 7)
17
[7]> (*(3 6 9)(- 8 5))

*** - EVAL: 3 is not a function name; try using a symbol instead
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead.
ABORT          :R2      Abort main loop
Break 1 [8]> :a
[9]> (+(* 3 6 9)(- 8 5))
165
[10]> (double 5)

*** - EVAL: undefined function DOUBLE
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of (FDEFINITION 'DOUBLE).
RETRY          :R2      Retry
STORE-VALUE    :R3      Input a new value for (FDEFINITION 'DOUBLE).
ABORT          :R4      Abort main loop
Break 1 [11]> :A
[12]> (quote pie)
PIE
[13]> (quote (double 5))
(DOUBLE 5)
[14]> (quote (+ 1 2))
(+ 1 2)
[15]> (quote whatever)
WHATEVER
[16]> 'pie
PIE
[17]> '(double 5)
(DOUBLE 5)
[18]> (setf pie 'cherry)
CHERRY
[19]> pie
CHERRY
[20]> (setf dozen 12)
12
[21]> dozen
12
[22]> (defun double (x)(* x 2))
DOUBLE
[23]> (double 5)
10
[24]> (double dozen)
24
[25]> (double pie)

*** - *: CHERRY is not a number
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead.
ABORT          :R2      Abort main loop
Break 1 [26]> :a
[27]> (double (double dozen))
48
[28]> (bye)
Bye